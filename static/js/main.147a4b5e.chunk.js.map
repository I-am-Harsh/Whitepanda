{"version":3,"sources":["Components/HeaderComponent.js","Components/BlogComponent.js","Components/FooterComponent.js","Components/Data.js","Components/SideMenuComponent.js","Components/RedirectComponent.js","Components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Header","Fragment","Navbar","expand","className","NavbarBrand","href","src","height","width","alt","Nav","navbar","NavItem","Jumbotron","Button","outline","color","React","Component","Blog","props","price","description","desc","name","img_path","key","style","borderRadius","Footer","Data","SideMenu","marginTop","Redirect","Main","state","blogdata","console","log","path","component","map","blogData","exact","withRouter","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.147a4b5e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavItem,Jumbotron, Button} from 'reactstrap';\r\n\r\nclass Header extends React.Component{\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar expand=\"md\" className ='mb-5'>\r\n                    <div className = 'container'>\r\n                        <NavbarBrand href=\"/Whitepanda\" className='mr-5'>\r\n                        <img src ={ \"assets/1.png\"} height = '100px' width = '100px' alt='logo_lmao' className='mt-0 pr-0' /> \r\n                        </NavbarBrand>\r\n                        <Nav navbar>\r\n                            <NavItem className = 'mr-2'>\r\n                                <a href = '/Whitepanda' className = 'a'>\r\n                                    <i className = 'fa fa-bell-o lg'></i>\r\n                                </a>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <a href = '/Whitepanda' className = 'a'>\r\n                                    <i className = 'fa fa-user-circle-o lg'></i>\r\n                                </a>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className = 'container'>\r\n                        <div className = 'row row-header mb-5 ml-2'>\r\n                            <h2>\r\n                            Content Store\r\n                            </h2>\r\n                        </div>\r\n                        <div className = 'row-content ml-4 '>\r\n                            <p className ='green'>\r\n                                Got bulk orders or almost similar orders?\r\n                                Fill the excel sheet\r\n                            </p>\r\n                            <p className = 'faded'>\r\n                                If you are wondering about an easy way to place orders  in large numbers, we provide a way customized\r\n                                just for that. Download our excel sheet , and fill the order brief in the prescribed format and submit.\r\n                                In case you need any help, <a href = '/Whitepanda' className = 'a'><u>we are just a click away</u></a>\r\n                            </p>\r\n                            <Button outline color = 'success' className = 'order_excel'> Order via excel sheet</Button>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {Button} from 'reactstrap';\r\n// import Image from 'reactstrap/Image';\r\n\r\n\r\nconst Blog = (props) =>{\r\n\r\n    // var disp = this.props;\r\n    var price = props.price;\r\n    var description = props.desc;\r\n    var name = props.name;\r\n    var img_path = props.img_path;\r\n    return( \r\n        <div className = 'container mt-50 ml-4' key = {props.img_path}>\r\n            <div className = 'row'>\r\n                <img src = {img_path} alt = 'icon' height = \"50px\" width = '50px' className='mr-3 mb-0' style = {{borderRadius:50}}></img>\r\n                <p className = 'pr- 5'>\r\n                { name }                \r\n                <br></br>\r\n                from { price }</p> \r\n            </div>\r\n            <div className = 'row row-content mt-3 grey'>\r\n                {description}\r\n            </div>  \r\n            <div className = 'row mt-3'>\r\n                <Button  outline color = 'success' className = 'button'>\r\n                    Order\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Blog;\r\n","import React from 'react';\r\n\r\nconst Footer = () =>{\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className = 'footer '>\r\n                <div className = 'container'>\r\n                    <div className = 'col-md-12 row '>\r\n                        <div className=\"row col-md-12 justify-content-center mb-3\">\r\n                            <div className = 'mr-5'>\r\n                                <i className = 'fa fa-linkedin fa-2x'></i>\r\n                            </div>\r\n                            <div className='mr-5'>\r\n                                <i className = 'fa fa-twitter fa-2x'></i>\r\n                            </div>\r\n                            <div className = 'mr-5'>\r\n                                <i className = 'fa fa-facebook fa-2x'></i>\r\n                            </div>\r\n                            <div>\r\n                                <i className = 'fa fa-instagram fa-2x'></i>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row col-md-12 justify-content-center mb-3\">Copyright @ 2019 White Panda Media Pvt Ltd</div> \r\n                        <div className=\"row col-md-12 justify-content-center mb-3\">All rights reserved</div>\r\n                        <div className=\"row col-md-12 justify-content-center\">\r\n                            <div className=\"ptsc\"><u>Privacy Policy</u></div>\r\n                            <div className=\"ptsc\"><u>Terms of Service</u></div>\r\n                            <div className=\"ptsc\"><u>Service Agreement</u></div>\r\n                            <div className=\"ptsc\"><u>Contact Us</u></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Footer;","export const Data = [\r\n    // Enter data here to increase the number of products on main page.\r\n    {\r\n        name:\"Blog/Article\",\r\n        desc:\"this is good this is good this is good this is good this is good this is good\",\r\n        price:\"$100\",\r\n        img_path : 'assets/1060-536x354-blur_2.jpg'\r\n    }, \r\n    {\r\n        name:\"Blog/Article\",\r\n        desc:\"this is good this is good this is good this is good this is good this is good\",\r\n        price:\"$100\",\r\n        img_path : 'assets/1060-536x354-blur_2.jpg'\r\n    },\r\n    {\r\n        name:\"Blog/Article\",\r\n        desc:\"this is good this is good this is good this is good this is good this is good\",\r\n        price:\"$100\",\r\n        img_path : 'assets/1060-536x354-blur_2.jpg'\r\n    },\r\n    {\r\n        name:\"Blog/Article\",\r\n        desc:\"this is good this is good this is good this is good this is good this is good\",\r\n        price:\"$100\",\r\n        img_path : 'assets/1060-536x354-blur_2.jpg'\r\n    },\r\n    {\r\n        name:\"Blog/Article\",\r\n        desc:\"this is good this is good this is good this is good this is good this is good\",\r\n        price:\"$100\",\r\n        img_path : 'assets/1060-536x354-blur_2.jpg'\r\n    },\r\n    {\r\n        name:\"Blog/Article\",\r\n        desc:\"this is good this is good this is good this is good this is good this is good\",\r\n        price:\"$100\",\r\n        img_path : 'assets/1060-536x354-blur_2.jpg'\r\n    },\r\n    {\r\n        name:\"Blog/Article\",\r\n        desc:\"this is good this is good this is good this is good this is good this is good\",\r\n        price:\"$100\",\r\n        img_path : 'assets/1060-536x354-blur_2.jpg'\r\n    },\r\n    {\r\n        name:\"Blog/Article\",\r\n        desc:\"this is good this is good this is good this is good this is good this is good\",\r\n        price:\"$100\",\r\n        img_path : 'assets/1060-536x354-blur_2.jpg'\r\n    },\r\n    {\r\n        name:\"Blog/Article\",\r\n        desc:\"this is good this is good this is good this is good this is good this is good\",\r\n        price:\"$100\",\r\n        img_path : 'assets/1060-536x354-blur_2.jpg'\r\n    }\r\n]","import React from 'react';\r\n\r\n\r\nconst SideMenu = () => {\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"right-thingy\" style = {{marginTop:70}} >\r\n                <div className=\"selected\">\r\n                    <a href = '/Whitepanda' className ='a'><img src = {\"./assets/grid.png\"} alt = 'menu' height = \"15px\" width='15px'></img></a>\r\n                </div>\r\n                <div className='side'>\r\n                    <a href = '/Whitepanda'  className ='a'><i className = 'fa fa-search lg'></i></a>\r\n                </div>\r\n                <div className='side'>\r\n                    <a href = '/Whitepanda'  className ='a'><i className = 'fa fa-gift lg'></i></a>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SideMenu;","import React from 'react';\r\n\r\nconst Redirect = () =>{\r\n    return(\r\n        <React.Fragment>\r\n            <div className = 'container ml-5'>\r\n                <div className = 'row'>\r\n                    Features of the website - \r\n                    <ul>\r\n                        <li>Mobile Freindly using Reactstrap</li>\r\n                        <li>Working Links using React Router Dom</li>\r\n                        <li>Easy to Update - just add components</li>\r\n                    </ul>\r\n                </div>\r\n                <div className = 'row'>\r\n                   <b><i>Made by Harsh Verma, VIT</i></b> \r\n                </div>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Redirect;","import React, {Component} from 'react';\r\n\r\nimport Header from './HeaderComponent'\r\nimport Blog from './BlogComponent';\r\nimport Footer from './FooterComponent';\r\nimport {Data} from './Data';\r\nimport SideMenu from './SideMenuComponent';\r\nimport Redirect from './RedirectComponent';\r\nimport { Switch, Route, withRouter} from 'react-router-dom'; \r\n\r\n\r\n    \r\nclass Main extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            blogdata : Data\r\n        }\r\n    }\r\n\r\n    \r\n    render(){\r\n        const HomePage = () =>{\r\n            return(\r\n            <div className = 'container '>\r\n                <div className = 'row'>\r\n                    {\r\n                        Data.map( blogData => {\r\n                            return(\r\n                            <div className = 'col-md-4 col-sm-1'>\r\n                                <Blog name={blogData.name} desc={blogData.desc}\r\n                                price={blogData.price} img_path = {blogData.img_path}  />\r\n                            </div>\r\n                            )\r\n                        } )\r\n                    }\r\n                </div>                    \r\n            </div>\r\n            );\r\n        }\r\n        console.log('can be resolved by adding ID to the data.js and key to the blogComponent')\r\n        return(\r\n            // Import everything here\r\n            // Considering this was to be made a static web page \r\n            // Not using React router to switch pages\r\n            // Font color and size can be changed in the App.css\r\n            // Made By Harsh Verma, for Whitepanda\r\n            \r\n            <div className=\"big-container\" >\r\n                <SideMenu/>\r\n                <div className = 'container ml-0'>\r\n                    <Header/>\r\n                    <Switch>\r\n                        <Route path = '/Whitepanda' component = {HomePage }/>\r\n                        <Route exact path = '/Whitepanda/info' component = {Redirect}/>\r\n                    </Switch>\r\n                    <Footer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(Main);","import React from 'react';\nimport './App.css';\nimport Main from './Components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Main/>\n      </div>\n    </BrowserRouter>  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport App from './App';\n// import './node_modules/font-awesome/css/font-awesome.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}